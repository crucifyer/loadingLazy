/*
 Project : https://github.com/crucifyer/loadingLazy
 License : MIT
*/(function(d){observer=new IntersectionObserver(entries=>{entries.forEach(entry=>{if(entry.isIntersecting){const node=entry.target;node.removeAttribute("loading");node.addEventListener("animationend",()=>{node.classList.remove("__loading_lazy__")},{once:true});node.classList.add("__loading_lazy__");observer.unobserve(node)}},{root:null,rootMargin:"0px",threshold:0})});const mutationObserver=new MutationObserver(mutations=>{mutations.forEach(mutation=>{mutation.addedNodes.forEach(node=>{if(node.nodeType===1&&node.tagName!=="IMG"&&node.tagName!=="IFRAME"){if(node.getAttribute("loading")==="lazy")observer.observe(node);node.querySelectorAll("[loading=lazy]:not(img,iframe)").forEach(node=>observer.observe(node))}})})});mutationObserver.observe(d.body,{childList:true,subtree:true});d.querySelectorAll("[loading=lazy]:not(img,iframe)").forEach(node=>observer.observe(node))})(document);
